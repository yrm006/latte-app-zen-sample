


const API = extern struct {
    g_env: [*c]mut volatile i32,
    g_msec: [*c]mut volatile u64,
    mem_check: fn (...) callconv(.C) usize,
    mem_alloc: fn (usize) callconv(.C) ?*mut c_void,
    mem_free: fn (?*mut c_void) callconv(.C) void,
    timer_set: fn (usize, fn (...) callconv(.C) void) callconv(.C) c_int,
    rand_get: fn (...) callconv(.C) u32,
    sin8: fn (i32) callconv(.C) i32,
    div: fn (i32, i32) callconv(.C) i32,
    mod: fn (i32, i32) callconv(.C) i32,
    read: fn (c_int, ?*mut c_void, usize) callconv(.C) isize,
    write: fn (c_int, ?*c_void, usize) callconv(.C) isize,
    flash_erase: fn (u8) callconv(.C) c_int,
    flash_save: fn (u8, ?*c_void, usize) callconv(.C) c_int,
    flash_load: fn (u8) callconv(.C) [*c]u8,
    uart_bps: fn (u32) callconv(.C) void,
    uart_send: fn ([*c]u8, usize) callconv(.C) void,
    uart_read: fn (...) callconv(.C) i32,
    i2c: fn ([*c]mut u8, usize, [*c]mut u8, usize) callconv(.C) c_int,
    io_led: fn (c_int) callconv(.C) c_int,
    io_btn: fn (...) callconv(.C) c_int,
    io_in: fn (c_int) callconv(.C) c_int,
    io_ana: fn (c_int) callconv(.C) c_int,
    io_out: fn (c_int) callconv(.C) void,
    io_pwm: fn (c_int, u32) callconv(.C) void,
    io_pwmt: fn (u32) callconv(.C) void,
    io_beep: fn (u32, u32) callconv(.C) void,
    sleep: fn (c_int, c_int) callconv(.C) void,
    line: fn ([*c]u8, usize) callconv(.C) [*c]mut u8,
    reset: fn (...) callconv(.C) void,
    ntsc_onoff: fn (c_int) callconv(.C) void,
    g_aFont: [*c][8]u8,
    g_aScreen: [*c]mut u8,
    g_nCursorX: [*c]mut u8,
    g_nCursorY: [*c]mut u8,
    screen_buf: fn (u8, u8) callconv(.C) [*c]mut u8,
    screen_regulize: fn (...) callconv(.C) void,
    screen_clear: fn (...) callconv(.C) void,
    screen_scroll_l: fn (...) callconv(.C) void,
    screen_scroll_r: fn (...) callconv(.C) void,
    screen_scroll_u: fn (...) callconv(.C) void,
    screen_scroll_d: fn (...) callconv(.C) void,
    screen_putc: fn (u8) callconv(.C) void,
    screen_puts: fn ([*c]u8) callconv(.C) void,
    keyboard_enqKeyBuf: fn (u8) callconv(.C) c_int,
    keyboard_deqKeyBuf: fn (...) callconv(.C) u8,
    atoi: fn ([*c]u8) callconv(.C) c_int,
    printf: fn ([*c]u8, ...) callconv(.C) c_int,
    snprintf: fn ([*c]mut u8, usize, [*c]u8, ...) callconv(.C) c_int,
    memcpy: fn (?*mut c_void, ?*c_void, usize) callconv(.C) ?*mut c_void,
    memset: fn (?*mut c_void, c_int, usize) callconv(.C) ?*mut c_void,
    strncpy: fn ([*c]mut u8, [*c]u8, usize) callconv(.C) [*c]mut u8,
    strncmp: fn ([*c]u8, [*c]u8, usize) callconv(.C) c_int,
    strlen: fn ([*c]u8) callconv(.C) usize,
};

pub extern const latte: API;


